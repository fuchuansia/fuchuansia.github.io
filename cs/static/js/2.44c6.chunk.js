(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{350:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* unused harmony export rankings */\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar diacritics = createCommonjsModule(function (module) {\n// Diacritics.js\n// \n// Started as something to be an equivalent of the Google Java Library diacritics library for JavaScript.\n// Found this: http://jsperf.com/diacritics/6 and converted it into a reusable module.\n// \n// @author Nijiko Yonskai\n// @license MIT\n// @copyright Nijikokun 2013 <nijikokun@gmail.com>\n(function (name, definition) {\n  if ( true && module.exports) module.exports = definition();\n  else if (false) {}\n  else this[name] = definition();\n})('Diacritics', function () {\n  // Create public object\n  var output = {\n    map: {}\n  };\n\n  // Create private reference map.\n  var reference = [\n    {'base':' ',    'letters':'\\u00A0'},\n    {'base':'A',    'letters':'\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'},\n    {'base':'AA',   'letters':'\\uA732'},\n    {'base':'AE',   'letters':'\\u00C6\\u01FC\\u01E2'},\n    {'base':'AO',   'letters':'\\uA734'},\n    {'base':'AU',   'letters':'\\uA736'},\n    {'base':'AV',   'letters':'\\uA738\\uA73A'},\n    {'base':'AY',   'letters':'\\uA73C'},\n    {'base':'B',    'letters':'\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'},\n    {'base':'C',    'letters':'\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'},\n    {'base':'D',    'letters':'\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'},\n    {'base':'DZ',   'letters':'\\u01F1\\u01C4'},\n    {'base':'Dz',   'letters':'\\u01F2\\u01C5'},\n    {'base':'E',    'letters':'\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'},\n    {'base':'F',    'letters':'\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'},\n    {'base':'G',    'letters':'\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'},\n    {'base':'H',    'letters':'\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'},\n    {'base':'I',    'letters':'\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'},\n    {'base':'J',    'letters':'\\u004A\\u24BF\\uFF2A\\u0134\\u0248'},\n    {'base':'K',    'letters':'\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'},\n    {'base':'L',    'letters':'\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'},\n    {'base':'LJ',   'letters':'\\u01C7'},\n    {'base':'Lj',   'letters':'\\u01C8'},\n    {'base':'M',    'letters':'\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'},\n    {'base':'N',    'letters':'\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'},\n    {'base':'NJ',   'letters':'\\u01CA'},\n    {'base':'Nj',   'letters':'\\u01CB'},\n    {'base':'O',    'letters':'\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'},\n    {'base':'OI',   'letters':'\\u01A2'},\n    {'base':'OO',   'letters':'\\uA74E'},\n    {'base':'OU',   'letters':'\\u0222'},\n    {'base':'P',    'letters':'\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'},\n    {'base':'Q',    'letters':'\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'},\n    {'base':'R',    'letters':'\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'},\n    {'base':'S',    'letters':'\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'},\n    {'base':'T',    'letters':'\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'},\n    {'base':'Th',   'letters':'\\u00DE'},\n    {'base':'TZ',   'letters':'\\uA728'},\n    {'base':'U',    'letters':'\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'},\n    {'base':'V',    'letters':'\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'},\n    {'base':'VY',   'letters':'\\uA760'},\n    {'base':'W',    'letters':'\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'},\n    {'base':'X',    'letters':'\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'},\n    {'base':'Y',    'letters':'\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'},\n    {'base':'Z',    'letters':'\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'},\n    {'base':'a',    'letters':'\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251'},\n    {'base':'aa',   'letters':'\\uA733'},\n    {'base':'ae',   'letters':'\\u00E6\\u01FD\\u01E3'},\n    {'base':'ao',   'letters':'\\uA735'},\n    {'base':'au',   'letters':'\\uA737'},\n    {'base':'av',   'letters':'\\uA739\\uA73B'},\n    {'base':'ay',   'letters':'\\uA73D'},\n    {'base':'b',    'letters':'\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'},\n    {'base':'c',    'letters':'\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'},\n    {'base':'d',    'letters':'\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'},\n    {'base':'dz',   'letters':'\\u01F3\\u01C6'},\n    {'base':'e',    'letters':'\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'},\n    {'base':'f',    'letters':'\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'},\n    {'base':'ff',   'letters':'\\uFB00'},\n    {'base':'fi',   'letters':'\\uFB01'},\n    {'base':'fl',   'letters':'\\uFB02'},\n    {'base':'ffi',  'letters':'\\uFB03'},\n    {'base':'ffl',  'letters':'\\uFB04'},\n    {'base':'g',    'letters':'\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'},\n    {'base':'h',    'letters':'\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'},\n    {'base':'hv',   'letters':'\\u0195'},\n    {'base':'i',    'letters':'\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'},\n    {'base':'j',    'letters':'\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'},\n    {'base':'k',    'letters':'\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'},\n    {'base':'l',    'letters':'\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'},\n    {'base':'lj',   'letters':'\\u01C9'},\n    {'base':'m',    'letters':'\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'},\n    {'base':'n',    'letters':'\\x6E\\xF1\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509'},\n    {'base':'nj',   'letters':'\\u01CC'},\n    {'base':'o',    'letters':'\\u07C0\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'},\n    {'base':'oe',   'letters':'\\u0152\\u0153'},\n    {'base':'oi',   'letters':'\\u01A3'},\n    {'base':'ou',   'letters':'\\u0223'},\n    {'base':'oo',   'letters':'\\uA74F'},\n    {'base':'p',    'letters':'\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'},\n    {'base':'q',    'letters':'\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'},\n    {'base':'r',    'letters':'\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'},\n    {'base':'s',    'letters':'\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'},\n    {'base':'ss',   'letters':'\\xDF'},\n    {'base':'t',    'letters':'\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'},\n    {'base':'th',   'letters':'\\u00FE'},\n    {'base':'tz',   'letters':'\\uA729'},\n    {'base':'u',    'letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'},\n    {'base':'v',    'letters':'\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'},\n    {'base':'vy',   'letters':'\\uA761'},\n    {'base':'w',    'letters':'\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'},\n    {'base':'x',    'letters':'\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'},\n    {'base':'y',    'letters':'\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'},\n    {'base':'z',    'letters':'\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'}\n  ];\n\n  // Generate reference mapping\n  for (var i = 0, refLength = reference.length; i < refLength; i++){\n    var letters = reference[i].letters.split(\"\");\n\n    for (var j = 0, letLength = letters.length; j < letLength; j++){\n      output.map[letters[j]] = reference[i].base;\n    }\n  }\n\n  /**\n   * Clean accents (diacritics) from string.\n   * \n   * @param  {String} input String to be cleaned of diacritics.\n   * @return {String}\n   */\n  output.clean = function (input) {\n    if (!input || !input.length || input.length < 1) {\n      return \"\";\n    }\n\n    var string = \"\";\n    var letters = input.split(\"\");\n    var index = 0;\n    var length = letters.length;\n    var letter;\n\n    for (; index < length; index++) {\n      letter = letters[index];\n      string += letter in output.map ? output.map[letter] : letter;\n    }\n\n    return string;\n  };\n\n  return output;\n});\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * @name match-sorter\n * @license MIT license.\n * @copyright (c) 2017 Kent C. Dodds\n * @author Kent C. Dodds <kent@doddsfamily.us>\n */\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\n\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\n\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\nfunction matchSorter(items, value) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n\n  var keys = options.keys,\n      _options$threshold = options.threshold,\n      threshold = _options$threshold === undefined ? rankings.MATCHES : _options$threshold;\n\n  var matchedItems = items.reduce(function (matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex,\n        _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n        keyThreshold = _getHighestRanking$ke === undefined ? threshold : _getHighestRanking$ke;\n\n    if (rank >= keyThreshold) {\n      matches.push({ item: item, rank: rank, index: index, keyIndex: keyIndex });\n    }\n    return matches;\n  }, []);\n  return matchedItems.sort(sortRankedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n}\n\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n\n    var newRank = getMatchRanking(itemValue, value, options);\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n    }\n    return { rank: rank, keyIndex: keyIndex, keyThreshold: keyThreshold };\n  }, { rank: rankings.NO_MATCH, keyIndex: -1, keyThreshold: options.threshold });\n}\n\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options);\n\n  // too long\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  }\n\n  // case sensitive equals\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank);\n\n  // Lower casing before further comparison\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase();\n\n  // case insensitive equals\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  }\n\n  // starts with\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  }\n\n  // word starts with\n  if (testString.indexOf(' ' + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  }\n\n  // is a part inside a cased string\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  }\n\n  // is acronym for a cased string\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  }\n\n  // contains\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  }\n\n  // acronym\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  }\n\n  // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n  return getClosenessRanking(testString, stringToRank);\n}\n\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n    default:\n      return false;\n  }\n}\n\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a loose match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\nfunction getClosenessRanking(testString, stringToRank) {\n  var charNumber = 0;\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n      if (stringChar === matchChar) {\n        return j + 1;\n      }\n    }\n    return -1;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n  charNumber = firstIndex;\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return function (spread) {\n    var matching = spread - stringToRank.length + 1;\n    var ranking = rankings.MATCHES + 1 / matching;\n    return ranking;\n  }(spread);\n}\n\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first\n * Note: will never return 0\n */\nfunction sortRankedItems(a, b) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aIndex = a.index,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bIndex = b.index,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      return aIndex < bIndex ? aFirst : bFirst;\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n\n  value = '' + value; // toString\n  if (!keepDiacritics) {\n    value = diacritics.clean(value);\n  }\n  return value;\n}\n\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\nfunction getItemValues(item, key) {\n  if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n    key = key.key;\n  }\n  var value = void 0;\n  if (typeof key === 'function') {\n    value = key(item);\n    // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  }\n  // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n  return value != null ? [].concat(value) : null;\n}\n\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n    return allVals;\n  }, []);\n}\n\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = { key: key };\n  }\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (matchSorter);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///350\n")},477:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/@uifabric/utilities/lib/styled.js\nvar styled = __webpack_require__(278);\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/@uifabric/utilities/lib/classNamesFunction.js\nvar classNamesFunction = __webpack_require__(279);\n\n// EXTERNAL MODULE: ./node_modules/@uifabric/utilities/lib/KeyCodes.js\nvar KeyCodes = __webpack_require__(29);\n\n// EXTERNAL MODULE: ./node_modules/@uifabric/utilities/lib/object.js\nvar object = __webpack_require__(66);\n\n// EXTERNAL MODULE: ./node_modules/@uifabric/utilities/lib/properties.js\nvar properties = __webpack_require__(280);\n\n// EXTERNAL MODULE: ./node_modules/@uifabric/utilities/lib/BaseComponent.js + 2 modules\nvar BaseComponent = __webpack_require__(287);\n\n// EXTERNAL MODULE: ./node_modules/office-ui-fabric-react/lib/components/Button/IconButton/IconButton.js + 1 modules\nvar IconButton = __webpack_require__(478);\n\n// EXTERNAL MODULE: ./node_modules/office-ui-fabric-react/lib/components/Icon/Icon.js + 3 modules\nvar Icon = __webpack_require__(473);\n\n// CONCATENATED MODULE: ./node_modules/office-ui-fabric-react/lib/components/SearchBox/SearchBox.base.js\n\r\n\r\n\r\n\r\n\r\nvar getClassNames = Object(classNamesFunction[\"a\" /* classNamesFunction */])();\r\nvar SearchBox_base_SearchBoxBase = /** @class */ (function (_super) {\r\n    tslib_es6[\"c\" /* __extends */](SearchBoxBase, _super);\r\n    function SearchBoxBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._rootElement = react[\"createRef\"]();\r\n        _this._inputElement = react[\"createRef\"]();\r\n        _this._onClickFocus = function () {\r\n            var inputElement = _this._inputElement.current;\r\n            if (inputElement) {\r\n                _this.focus();\r\n                inputElement.selectionStart = inputElement.selectionEnd = 0;\r\n            }\r\n        };\r\n        _this._onFocusCapture = function (ev) {\r\n            _this.setState({\r\n                hasFocus: true\r\n            });\r\n            _this._events.on(ev.currentTarget, 'blur', _this._onBlur, true);\r\n            if (_this.props.onFocus) {\r\n                _this.props.onFocus(ev);\r\n            }\r\n        };\r\n        _this._onClearClick = function (ev) {\r\n            var clearButtonProps = _this.props.clearButtonProps;\r\n            if (clearButtonProps && clearButtonProps.onClick) {\r\n                clearButtonProps.onClick(ev);\r\n            }\r\n            if (!ev.defaultPrevented) {\r\n                _this._onClear(ev);\r\n            }\r\n        };\r\n        _this._onKeyDown = function (ev) {\r\n            switch (ev.which) {\r\n                case KeyCodes[\"a\" /* KeyCodes */].escape:\r\n                    _this.props.onEscape && _this.props.onEscape(ev);\r\n                    if (!ev.defaultPrevented) {\r\n                        _this._onClear(ev);\r\n                    }\r\n                    break;\r\n                case KeyCodes[\"a\" /* KeyCodes */].enter:\r\n                    if (_this.props.onSearch) {\r\n                        _this.props.onSearch(_this.state.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    _this.props.onKeyDown && _this.props.onKeyDown(ev);\r\n                    if (!ev.defaultPrevented) {\r\n                        return;\r\n                    }\r\n            }\r\n            // We only get here if the keypress has been handled,\r\n            // or preventDefault was called in case of default keyDown handler\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n        };\r\n        _this._onBlur = function (ev) {\r\n            _this._events.off(_this._rootElement.current, 'blur');\r\n            _this.setState({\r\n                hasFocus: false\r\n            });\r\n            if (_this.props.onBlur) {\r\n                _this.props.onBlur(ev);\r\n            }\r\n        };\r\n        _this._onInputChange = function (ev) {\r\n            var value = ev.target.value;\r\n            if (value === _this._latestValue) {\r\n                return;\r\n            }\r\n            _this._latestValue = value;\r\n            _this.setState({ value: value });\r\n            _this._callOnChange(value);\r\n        };\r\n        _this._warnDeprecations({\r\n            labelText: 'placeholder',\r\n            defaultValue: 'value'\r\n        });\r\n        _this._latestValue = props.value || '';\r\n        _this.state = {\r\n            value: _this._latestValue,\r\n            hasFocus: false,\r\n            id: Object(object[\"c\" /* getId */])('SearchBox')\r\n        };\r\n        return _this;\r\n    }\r\n    SearchBoxBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.value !== undefined) {\r\n            this._latestValue = newProps.value;\r\n            // If the user passes in null, substitute an empty string\r\n            // (passing null is not allowed per typings, but users might do it anyway)\r\n            this.setState({\r\n                value: newProps.value || ''\r\n            });\r\n        }\r\n    };\r\n    SearchBoxBase.prototype.render = function () {\r\n        var _a = this.props, ariaLabel = _a.ariaLabel, placeholder = _a.placeholder, className = _a.className, disabled = _a.disabled, underlined = _a.underlined, styles = _a.styles, labelText = _a.labelText, theme = _a.theme, clearButtonProps = _a.clearButtonProps, disableAnimation = _a.disableAnimation, iconProps = _a.iconProps;\r\n        var _b = this.state, value = _b.value, hasFocus = _b.hasFocus, id = _b.id;\r\n        var placeholderValue = labelText === undefined ? placeholder : labelText;\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            underlined: underlined,\r\n            hasFocus: hasFocus,\r\n            disabled: disabled,\r\n            hasInput: value.length > 0,\r\n            disableAnimation: disableAnimation\r\n        });\r\n        var nativeProps = Object(properties[\"d\" /* getNativeProps */])(this.props, properties[\"g\" /* inputProperties */], ['id', 'className', 'placeholder', 'onFocus', 'onBlur', 'value']);\r\n        return (react[\"createElement\"](\"div\", { ref: this._rootElement, className: classNames.root, onFocusCapture: this._onFocusCapture },\r\n            react[\"createElement\"](\"div\", { className: classNames.iconContainer, onClick: this._onClickFocus, \"aria-hidden\": true },\r\n                react[\"createElement\"](Icon[\"a\" /* Icon */], tslib_es6[\"a\" /* __assign */]({ iconName: \"Search\" }, iconProps, { className: classNames.icon }))),\r\n            react[\"createElement\"](\"input\", tslib_es6[\"a\" /* __assign */]({}, nativeProps, { id: id, className: classNames.field, placeholder: placeholderValue, onChange: this._onInputChange, onInput: this._onInputChange, onKeyDown: this._onKeyDown, value: value, disabled: disabled, \"aria-label\": ariaLabel ? ariaLabel : placeholder, ref: this._inputElement })),\r\n            value.length > 0 && (react[\"createElement\"](\"div\", { className: classNames.clearButton },\r\n                react[\"createElement\"](IconButton[\"a\" /* IconButton */], tslib_es6[\"a\" /* __assign */]({ styles: { root: { height: 'auto' }, icon: { fontSize: '12px' } }, iconProps: { iconName: 'Clear' } }, clearButtonProps, { onClick: this._onClearClick }))))));\r\n    };\r\n    /**\r\n     * Sets focus to the search box input field\r\n     */\r\n    SearchBoxBase.prototype.focus = function () {\r\n        if (this._inputElement.current) {\r\n            this._inputElement.current.focus();\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether or not the SearchBox has focus\r\n     */\r\n    SearchBoxBase.prototype.hasFocus = function () {\r\n        return !!this.state.hasFocus;\r\n    };\r\n    SearchBoxBase.prototype._onClear = function (ev) {\r\n        this.props.onClear && this.props.onClear(ev);\r\n        if (!ev.defaultPrevented) {\r\n            this._latestValue = '';\r\n            this.setState({\r\n                value: ''\r\n            });\r\n            this._callOnChange('');\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            this.focus();\r\n        }\r\n    };\r\n    SearchBoxBase.prototype._callOnChange = function (newValue) {\r\n        var _a = this.props, onChange = _a.onChange, onChanged = _a.onChanged;\r\n        // Call @deprecated method.\r\n        if (onChanged) {\r\n            onChanged(newValue);\r\n        }\r\n        if (onChange) {\r\n            onChange(newValue);\r\n        }\r\n    };\r\n    SearchBoxBase.defaultProps = {\r\n        disableAnimation: false,\r\n        clearButtonProps: { ariaLabel: 'Clear text' }\r\n    };\r\n    return SearchBoxBase;\r\n}(BaseComponent[\"a\" /* BaseComponent */]));\r\n\r\n//# sourceMappingURL=SearchBox.base.js.map\n// EXTERNAL MODULE: ./node_modules/@uifabric/styling/lib/index.js + 31 modules\nvar lib = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./node_modules/office-ui-fabric-react/lib/components/SearchBox/SearchBox.styles.js\n\r\nfunction getStyles(props) {\r\n    var theme = props.theme, underlined = props.underlined, disabled = props.disabled, hasFocus = props.hasFocus, className = props.className, hasInput = props.hasInput, disableAnimation = props.disableAnimation;\r\n    var palette = theme.palette, fonts = theme.fonts, semanticColors = theme.semanticColors;\r\n    return {\r\n        root: [\r\n            'ms-SearchBox',\r\n            fonts.medium,\r\n            lib[\"s\" /* normalize */],\r\n            {\r\n                color: palette.neutralPrimary,\r\n                backgroundColor: semanticColors.inputBackground,\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                flexWrap: 'nowrap',\r\n                alignItems: 'stretch',\r\n                // The 1px top and bottom padding ensure the input field does not overlap the border\r\n                padding: '1px 0 1px 4px',\r\n                border: \"1px solid \" + palette.neutralTertiary,\r\n                height: 32,\r\n                selectors: (_a = {},\r\n                    _a[lib[\"e\" /* HighContrastSelector */]] = {\r\n                        border: '1px solid WindowText'\r\n                    },\r\n                    _a[':hover'] = {\r\n                        borderColor: palette.neutralDark,\r\n                        selectors: (_b = {},\r\n                            _b[lib[\"e\" /* HighContrastSelector */]] = {\r\n                                borderColor: 'Highlight'\r\n                            },\r\n                            _b)\r\n                    },\r\n                    _a[':hover $iconContainer'] = {\r\n                        color: palette.themeDark\r\n                    },\r\n                    _a)\r\n            },\r\n            hasFocus && [\r\n                'is-active',\r\n                {\r\n                    borderColor: palette.themePrimary,\r\n                    selectors: (_c = {\r\n                            ':hover': {\r\n                                borderColor: palette.themePrimary\r\n                            }\r\n                        },\r\n                        _c[lib[\"e\" /* HighContrastSelector */]] = {\r\n                            borderColor: 'Highlight'\r\n                        },\r\n                        _c)\r\n                }\r\n            ],\r\n            disabled && [\r\n                'is-disabled',\r\n                {\r\n                    borderColor: palette.neutralLighter,\r\n                    backgroundColor: palette.neutralLighter,\r\n                    pointerEvents: 'none',\r\n                    cursor: 'default'\r\n                }\r\n            ],\r\n            underlined && [\r\n                'is-underlined',\r\n                {\r\n                    borderWidth: '0 0 1px 0',\r\n                    // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\r\n                    padding: '1px 0 1px 8px'\r\n                }\r\n            ],\r\n            underlined &&\r\n                disabled && {\r\n                backgroundColor: 'transparent'\r\n            },\r\n            hasInput && 'can-clear',\r\n            className\r\n        ],\r\n        iconContainer: [\r\n            'ms-SearchBox-iconContainer',\r\n            {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                flexShrink: 0,\r\n                fontSize: 16,\r\n                width: 32,\r\n                textAlign: 'center',\r\n                color: palette.themePrimary,\r\n                cursor: 'text'\r\n            },\r\n            hasFocus && {\r\n                width: 4\r\n            },\r\n            disabled && {\r\n                color: palette.neutralTertiary\r\n            },\r\n            !disableAnimation && {\r\n                transition: \"width \" + lib[\"b\" /* AnimationVariables */].durationValue1\r\n            }\r\n        ],\r\n        icon: [\r\n            'ms-SearchBox-icon',\r\n            {\r\n                opacity: 1\r\n            },\r\n            hasFocus && {\r\n                opacity: 0\r\n            },\r\n            !disableAnimation && {\r\n                transition: \"opacity \" + lib[\"b\" /* AnimationVariables */].durationValue1 + \" 0s\"\r\n            }\r\n        ],\r\n        clearButton: [\r\n            'ms-SearchBox-clearButton',\r\n            {\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'stretch',\r\n                cursor: 'pointer',\r\n                flexBasis: '32px',\r\n                flexShrink: 0,\r\n                padding: 1,\r\n                color: palette.themePrimary\r\n            }\r\n        ],\r\n        field: [\r\n            'ms-SearchBox-field',\r\n            lib[\"s\" /* normalize */],\r\n            {\r\n                backgroundColor: 'transparent',\r\n                border: 'none',\r\n                outline: 'none',\r\n                fontWeight: 'inherit',\r\n                fontFamily: 'inherit',\r\n                fontSize: 'inherit',\r\n                color: palette.neutralPrimary,\r\n                flex: '1 1 0px',\r\n                // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\r\n                // 0px allows the input element to shrink to fit the container.\r\n                minWidth: '0px',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                // This padding forces the text placement to round up.\r\n                paddingBottom: 0.5,\r\n                // This removes the IE specific clear button in the input since we implimented our own\r\n                selectors: {\r\n                    '::-ms-clear': {\r\n                        display: 'none'\r\n                    },\r\n                    '::placeholder': {\r\n                        color: semanticColors.inputPlaceholderText,\r\n                        opacity: 1\r\n                    },\r\n                    ':-ms-input-placeholder': {\r\n                        color: semanticColors.inputPlaceholderText\r\n                    }\r\n                }\r\n            },\r\n            disabled && {\r\n                color: palette.neutralTertiary\r\n            }\r\n        ]\r\n    };\r\n    var _a, _b, _c;\r\n}\r\n//# sourceMappingURL=SearchBox.styles.js.map\n// CONCATENATED MODULE: ./node_modules/office-ui-fabric-react/lib/components/SearchBox/SearchBox.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SearchBox; });\n\r\n\r\n\r\nvar SearchBox = Object(styled[\"a\" /* styled */])(SearchBox_base_SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\r\n//# sourceMappingURL=SearchBox.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///477\n")}}]);